#!/bin/bash
## (c) Anirudh Acharya 2024, 2025
## useful aliases

# set aliases home directory, this is where all subscripts live
export ALIASES_HOME="${HOME}"

# source helpers
source "${ALIASES_HOME}/.helperfuncs"

OS_TYPE=$(detect_os_type)
#SHELL_TYPE=$(detect_shell_type)

################################################################################################
#   OS agnostic aliases
################################################################################################

################################################
# aliases common to all OSes for home computers
source "${ALIASES_HOME}/.aliases_dev"
################################################

alias getdot="git clone --depth 1 --single-branch --branch main https://github.com/anirudhra/dotfiles"
alias redot='cd "${HOME}/dotfiles" && git pull && restow'

## ls aliases
## Colorize the ls output ##
alias ls='ls --color=auto -FG'
#export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
alias ll='ls -la --color | less -R'
## Show hidden files ##
alias ll.='ls -l -d -FG --color=auto .* | less'
alias ls.='ls -d -FG --color=auto .*'

alias l='ls -lFh'   #size,show type,human readable
alias la='ls -lAFh' #long list,show almost all,show type,human readable
alias lr='ls -tRFh' #sorted by date,recursive,show type,human readable
alias lt='ls -ltFh' #long list,sorted by date,show type,human readable
alias ldot='ls -ld .*'
alias lS='ls -1FSsh'
alias lart='ls -1Fcart'
alias lrt='ls -1Fcrt'
alias lsr='ls -lARFh' #Recursive list of files and directories
alias lsn='ls -1'     #A column contains name of files and directories

## a quick way to get out of current directory ##
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias grepc='grep --color=always'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '
alias hgrep="fc -El 0 | grep"
alias greph='history | grep'

#directory related aliases
alias mkdir='mkdir -pv'
alias md='mkdir -pv'
alias rd='rmdir'

# "dos" aliases
alias cls='clear'
alias c='clear'
alias dir='ls'

alias path='echo -e ${PATH//:/\\n}'
alias now='date +"%T"'
alias nowtime='now'
alias nowdate='date +"%d-%m-%Y"'
alias a='alias'

# find aliases
alias fdir='find . -type d -name'
alias count='find . -type f | wc -l'
alias ffile='find . -type f -name'

## disk space clean output ##
alias dud='du -d 1 -h'
alias df='df -P -h'
alias du='du -ch'
alias duf='duf -hide special'
alias dirsize='du -sh'
alias diskuse="echo 'Device          Size  Used  Free  Mount Point' && df -h --output=source,size,used,avail,target | grep dev/root | sort"

# sort, unset etc.
alias help='man'
alias sortnr='sort -n -r'
alias unexport='unset'

#file aliases, always interactive mode
#alias rm='rm -i'
#alias cp='cp -i'
#alias mv='mv -i'

## get top process eating memory
alias psmem='ps aux | sort -nr -k 4'
alias psmem10='ps aux | sort -nr -k 4 | head -10'
alias free='free -h'

## get top process eating cpu ##
alias pscpu='ps aux | sort -nr -k 3'
alias pscpu10='ps aux | sort -nr -k 3 | head -10'

alias listps='ps aux | grep -v "ps aux" | grep -Ev "\[.+\]" | grep -v grep'
alias proc='ps aux | grep -i '

# become root #
alias root='sudo -i'
#alias su='sudo -i'
alias please='sudo $( history -p !! )'

# editor aliases, check in order of preference
if command -v nvim >/dev/null 2>&1; then
  alias vi='nvim'
  alias vim='nvim'
  alias vis='nvim "+set si"'
  alias sudovi='sudo nvim'
  alias edit='nvim'
elif command -v vim >/dev/null 2>&1; then
  alias vi='vim'
  alias vim='vim'
  alias vis='vim "+set si"'
  alias sudovi='sudo vim'
  alias edit='vim'
elif command -v vim.tiny >/dev/null 2>&1; then
  alias vi='vim.tiny'
  alias vim='vim.tiny'
  alias vis='vim.tiny "+set si"'
  alias sudovi='sudo vim.tiny'
  alias edit='vim.tiny'
else
  # Failsafe, in almost every OS
  alias vi='nano'
  alias vim='nano'
  alias vis='nano "+set si"'
  alias sudovi='sudo nano'
  alias edit='nano'
fi

# would automatically be one of the above
export EDITOR='vim'
alias v='vim'

# ncdu aliases
alias ncdu='ncdu -e -2 --color dark-bg --show-graph --show-itemcount' # better default ncdu
alias ncdulocal='ncdu --exclude "/mnt/nfs" --exclude "/mnt/pve-sata-ssd" --exclude "/mnt/pve-nvme-ssd" --exclude-kernfs -e -2 --color dark-bg --show-graph --show-itemcount'

# pager and readme aliases
alias pager="${PAGER}"
alias readme="find . -maxdepth 1 -iname \"readme*\" -exec less -R {} \;"

# Tree
if [ ! -x "$(which tree 2>/dev/null)" ]; then
  alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"
fi

# Get rid of .DS_Store files recursiveloy in current directory tree
alias dsclean='find . -type f -name .DS_Store -delete && find . -type f -name ._.DS_Store -delete'
alias dotclean='find . -name ._\* -delete'

# Enable syntax-highlighting in less/cat
# Note: needs source-highlight and highlight brew packages for these to work
#export LESSOPEN="| /usr/local/bin/src-hilite-lesspipe.sh %s"
#export LESS=" -R "
#alias less='less -m -N -g -i -J --underline-special --SILENT'
alias lessc='less -R'
alias more='less'
#alias cat='less'
#use column command for a table. syntax: column -t -s "separator like , :" <filename>
alias table='column -t -s'

#dumps directory contents to file, usage dir2file <filename>
alias dir2file="find \"${PWD}\" -iname \"*\" >"

#use "refresh" followed by any command you want to constantly refresh on screen, Ctrl+C to quit
alias refresh='watch --interval=3'

# network related
# Stop after sending count ECHO_REQUEST packets #
alias ping='ping -c 5'
# Do not wait interval 1 second, go fast #
alias fastping='ping -c 100 -s.2'
alias ports='netstat -tulanp'
alias wget='wget -c'

#quick access to zshrc and bashrc files
if [[ "${SHELL}" == "/bin/bash" ]]; then
  alias bashrc='${EDITOR} ${HOME}/.bashrc'
  alias bashrc.='${EDITOR} ${HOME}/.bashrc.local'
elif [[ "${SHELL}" == "/bin/zsh" ]]; then
  alias zshrc='${EDITOR} ${HOME}/.zshrc'
  alias zshrc.='${EDITOR} ${HOME}/.zshrc.local'
fi

#stow aliases
if [ -x "$(command -v stow)" ]; then
  alias unstow='cd ${HOME}/dotfiles/home && stow --verbose=2 --target=${HOME} --delete . && cd -'
  alias restow='cd ${HOME}/dotfiles/home && stow --verbose=1 --target=${HOME} --stow --adopt . && cd -'
else
  # call the manual stow function
  alias restow=manualstow
  alias dotstow='cp -f "${HOME}/dotfiles/home"/.* "${HOME}"'
fi

######## functions ######################

mkcd() {
  case $# in
  1)
    mkdir -p "$1"
    cd "$1" || return
    ;;
  *)
    info "USAGE : mkcd <directory>"
    ;;
  esac
}

# for machines without gnu stow
manualstow() {
  local homefiles=(
    '.aliases'
    '.aliases_linux'
    '.aliases_hosts'
    '.aliases_linux_debian'
    '.aliases_linux_fedora'
    '.aliases_dev'
    '.aliases_macos'
    '.profile'
    ".profile.${HOSTNAME}"
    ".profile.${HOST}"
    ".profile.*"
    '.zshrc'
    '.bashrc'
    '.bash_profile'
    '.vimrc'
    '.gitfuncs'
    '.helperfuncs'
  )

  local homedirs=(
    '.vim'
    '.config'
    '.vifm'
  )

  for file in "${homefiles[@]}"; do
    local src="${HOME}/dotfiles/home/${file}"
    local dest="${HOME}/${file}"

    if [ -e "${dest}" ]; then
      cp -f "${dest}" "${dest}.bak"
      info "Backed up ${dest} to ${dest}.bak"
    fi
    if [ -e "${src}" ]; then
      cp -f "${src}" "${dest}"
      info "Copied ${src} to ${dest}"
    else
      info "Source file ${src} does not exist, skipping."
    fi
  done

  for dir in "${homedirs[@]}"; do
    local src="${HOME}/dotfiles/home/${dir}"
    local dest="${HOME}/${dir}"

    if [ -d "${dest}" ]; then
      cp -a "${dest}" "${dest}.bak"
      info "Backed up ${dest} to ${dest}.bak"
    fi
    if [ -d "${src}" ]; then
      # create destination directory if it doesn't exist
      mkdir -p "${dest}"
      # copy all files and directories recursively
      cp -a "${src}/" "${dest}/"
      info "Copied ${src} to ${dest}"
    else
      info "Source directory ${src} does not exist, skipping."
    fi
  done
}

################################################################################################
#   END: OS agnostic aliases
################################################################################################

################################################################################################
#   OS specific aliases
################################################################################################

debuglog "OS Detected: ${OS_TYPE}"

if [[ "${OS_TYPE}" == "debian" ]] || [[ "${OS_TYPE}" == "fedora" ]]; then
  source "${ALIASES_HOME}/.aliases_linux"
elif [[ "${OS_TYPE}" == "macos" ]]; then
  source "${ALIASES_HOME}/.aliases_macos"
fi

################################################################################################
#   END: OS specific aliases
################################################################################################
