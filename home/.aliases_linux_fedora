#!/bin/bash
## (c) Anirudh Acharya 2024, 2025
## useful aliases for Fedora Linux and derivatives; will be sourced by parent aliases
## Assumption is this is for Client only, not SBC or PVE Server or Guests

# Guard variable to ensure sourcing only once
if [[ -v SOURCED_ALIASES_LINUX_FEDORA ]]; then
  return 0 # Exit the script if already sourced
fi

# Set the guard variable
SOURCED_ALIASES_LINUX_FEDORA=1

debuglog "Fedora aliases sourced"

# add condition for fedora specific command here
alias fullclean='sudo dnf clean all && sudo dnf autoremove && sudo flatpak uninstall --unused'
alias fullupdate='sudo dnf update --refresh && sudo dnf upgrade -y && sudo flatpak upgrade -y'
alias fullupgrade='sudo dnf update --refresh && sudo flatpak upgrade -y && sudo dnf distro-sync'
alias fwupdate='sudo fwupdmgr refresh --force && sudo fwupdmgr get-updates && sudo fwupdmgr update'
alias checkfw='sudo fwupdmgr get-devices'
alias showkernel='echo Active Kernel && sudo uname -a && echo && echo Installed Kernels && sudo rpm -q kernel-core'
alias showinstalled="rpm --query --all --queryformat '%{NAME}.%{ARCH}: %{SUMMARY}\n' | less"
alias upgrade='fullupdate && fullclean && fwupdate && flatpak update -y'
#rpm --query --all --queryformat '%{NAME}.%{ARCH}: %{SUMMARY}\n'macOS specific only below

# set the right nfs directories
export MEDIADIR="/mnt/nfs/sata-ssd/ssd-media/media"
export DATADIR="/mnt/nfs/sata-ssd/ssd-data"
export NVMEDIR="/mnt/nfs/nvme-ssd/nvme-data"
export DOCKERDIR="${DATADIR}/dockerapps"
export PVEDIR="${HOME}/dotfiles/pve/maintenance"

# alias cat to bat with syntax highlighting
alias cat="bat --color=always"
alias bat="bat --color=always"

######## functions ######################

# remove old kernels in fedora
cleankernels() {
  old_kernels=($(dnf repoquery --installonly --latest-limit=-1 -q))

  if [ "${#old_kernels[@]}" -eq 0 ]; then
    info "No old kernels found"
  elif ! dnf remove "${old_kernels[@]}"; then
    warn "Failed to remove old kernels"
  fi
}
