#!/bin/bash
# git clone, pull helper functions
# Usage:
#   clonerepo <giturl> <localdir>
#   updaterepo <giturl> <localdir>
#   syncrepo <giturl> <localdir>

# Guard variable to ensure sourcing only once
if [[ -v SOURCED_GITFUNCS ]]; then
    return 0 # Exit the script if already sourced
fi

# Set the guard variable
SOURCED_GITFUNCS=1

debuglog "Git functions sourced"

# Clone a repo if it doesn't exist
clonerepo() {
  local giturl="$1"
  local gitdir="$2"
  if [ ! -d "$gitdir/.git" ]; then
    echo "Cloning repo: $giturl -> $gitdir"
    if git clone "$giturl" "$gitdir"; then
      return 0
    else
      echo "Clone failed!"
      return 1
    fi
  else
    echo "Repo exists: $gitdir"
    return 1
  fi
}

# Update a repo if it exists
updaterepo() {
  local giturl="$1"
  local gitdir="$2"
  if [ -d "$gitdir/.git" ]; then
    cd "$gitdir" >/dev/null 2>&1 || { echo "Failed to enter $gitdir"; return 1; }
    local syncstatus
    syncstatus=$(git pull)
    if [[ "$syncstatus" != "Already up to date." ]]; then
      echo "Repo updated: $giturl"
      cd - >/dev/null 2>&1
      return 0
    else
      echo "No new updates."
      cd - >/dev/null 2>&1
      return 1
    fi
  else
    echo "Repo does not exist: $gitdir"
    return 1
  fi
}

# Clone or update a repo; return 0 if cloned or updated, 1 if no new updates
syncrepo() {
  local giturl="$1"
  local gitdir="$2"
  if clonerepo "$giturl" "$gitdir"; then
    return 0
  elif updaterepo "$giturl" "$gitdir"; then
    return 0
  else
    return 1
  fi
}
