#!/bin/bash
## (c) Anirudh Acharya 2024, 2025
## useful aliases for Dev/Homelab, common for macOS and Linux; will be sourced by parent aliases
# This file is sourced by .aliases before .aliases_linux/* or .aliases_macos
# This file should not contain any OS-specific aliases, as it will be sourced
# by both macOS and Linux based on machine type

# Guard variable to ensure sourcing only once
if [ -n "${SOURCED_ALIASES_DEV}" ]; then
  return 0 # Exit the script if already sourced
fi

# Set the guard variable
SOURCED_ALIASES_DEV=1

source "${ALIASES_HOME}/.aliases_hosts"
source "${ALIASES_HOME}/.helperfuncs"

MACHINE_TYPE=$(detect_machine_type) # this is the machine type of the machine running the script

debuglog "Dev/Homelab aliases sourced"

######## functions ######################

#create timelapse from set of images in a directory
timelapse() {
  if command -v mencoder >/dev/null 2>&1; then
    if command -v ffmpeg >/dev/null 2>&1; then
      #10fps should be good, but adjust as needed
      info "Place all images in current directory sorted in ascending order by file name"
      ls -1tr | grep -v files.txt >files.txt
      mencoder -nosound -noskip -oac copy -ovc copy -o output.avi -mf fps=10 'mf://@files.txt'
      #ffmpeg -i output.avi -vf scale=1920:1440,crop=1920:1080 output-final.avi
      # adjust res and codec manually
      ffmpeg -i output.avi output-final.avi
      info "Done. You may delete original output.avi and files.txt"
    else
      warn "ffmpeg not found, please install it"
    fi
  else
    warn "mencoder not found, please install it" #ffmpeg is a dependency of mencoder
  fi
}
###############################################

# ssh aliases
#alias sshrouter='ssh "${ROUTERUSER}@${ROUTER}" -p "${ROUTERPORT}" -t "${SSHTMUX}"'
alias sshddwrt='ssh "${SSHROOT}@${DDWRTROUTER}" -p "${ROUTERPORT}" -t "${SSHTMUX}"'
#alias sshusg='ssh "${SSHROOT}@${USG}" -t "${SSHTMUX}"'
#alias sshusg='ssh "${SSHROOT}@${USG}"'

alias sshpve='ssh -o MACs="${SSHMAC}" "${SSHROOT}@${PVESERVER}" -t "${SSHTMUX}"'
alias sshserver='ssh -o MACs="${SSHMAC}" "${SSHROOT}@${PVESERVER}"' #non-tmux version

alias sshsbc='ssh "${SSHROOT}@${SBC}" -t "${SSHTMUX}"'
alias sshsbcwifi='ssh "${SSHROOT}@${SBCWIFI}" -t "${SSHTMUX}"'
#alias sshsbceth='ssh "${SSHROOT}@${SBCETH}" -t "${SSHTMUX}"'
#alias sshsbc1='ssh "${SSHROOT}@${SBC1}" -t "${SSHTMUX}"'

alias sshwg='ssh "${SSHROOT}@${PVWG}" -t "${SSHTMUX}"'
alias sshventoy='ssh "${SSHROOT}@${PVEVENTOY}" -t "${SSHTMUX}"'
alias sshvega='ssh "${SSHROOT}@${PVEVEGA}" -t "${SSHTMUX}"'
alias sshblanka='ssh "${SSHROOT}@${PVEBLANKA}" -t "${SSHTMUX}"'
alias sshha='ssh "${SSHROOT}@${PVEHA}" -t "${SSHTMUX}"'
alias sshjf='ssh "${SSHROOT}@${PVEJF}" -t "${SSHTMUX}"'
alias sshsagat='ssh "${SSHROOT}@${PVESAGAT}" -t "${SSHTMUX}"'
alias sshimm='ssh "${SSHROOT}@${PVEIMM}" -t "${SSHTMUX}"'
alias sshubuntu='ssh "${SSHROOT}@${PVEUBUNTU}" -t "${SSHTMUX}"'
alias sshubuntuuser='ssh "${SSHNONROOT}@${PVEUBUNTU}" -t "${SSHTMUX}"'
alias sshkuma='ssh "${SSHROOT}@${PVEKUMA}" -t "${SSHTMUX}"'
alias sshlms='ssh "${SSHROOT}@${PVELMS}" -t "${SSHTMUX}"'

# generic tmux ssh aliases
alias sshtmux='ssh -t "tmux -2 attach || tmux -2 new"'

# ping aliases
#alias pingrouter='ping "${ROUTER}"'
alias pingddwrt='ping "${DDWRTROUTER}"'
alias pingserver='ping "${PVESERVER}"'

# iperf3 aliases for network testing
alias iperfdown='iperf3 -Rc "${PVESERVER}"'
alias iperfup='iperf3 -c "${PVESERVER}"'

# goto aliases
alias gocode='cd "${HOME}/code"'
alias gogit='cd "${HOME}/code/github"'
alias gopkg='cd "${HOME}/packages/install"'
alias godot='cd "${DOTFILES_HOME}/dotfiles"'
alias gopve='cd "${DOTFILES_HOME}/dotfiles/pve"'
alias goscripts='cd "${DOTFILES_HOME}/dotfiles/common/scripts"'
alias goans='cd "${DOTFILES_HOME}/dotfiles/common/ansible/scripts"'

#git
alias gitpush="git pull && git add * && git commit -a && git push"
alias gitpullall="find . -type d -name .git -exec sh -c \"cd \"{}\"/../ && pwd && git pull\" \;"
alias gitpushall="find . -type d -name .git -exec sh -c \"cd \"{}\"/../ && pwd && git pull && git add * && git commit -a && git push\" \;"

# change ownership to nobdoy:nogroup, primarily for shares
alias nobodyown='chown -R nobody:nogroup *'

# Create m3u playlist from file listing in current directory recursively
alias createplaylist="find . -type f -iname \"*.mp3\" -or -iname \"*.flac\" -or -iname \"*.alac\" -or -iname \"*.m4a\" > Playlist.m3u"

# gemini-cli alias
alias geminicli="npx https://github.com/google-gemini/gemini-cli"
